name: Build

on:
  workflow_call:
    inputs:
      platforms:
        required: false
        type: string
        default: >-
          [ "ubuntu-latest", "windows-latest" ]
      configurations:
        required: false
        type: string
        default: >-
          [ "Debug", "Release" ]

      apt_dependencies:
        required: false
        type: string
      pip_dependencies:
        required: false
        type: string

      vcpkg_commit:
        required: false
        type: string

      cmake_options:
        required: false
        type: string

      package_configurations:
        required: false
        type: string
      package_platforms:
        required: false
        type: string
      
      python_version:
        required: false
        type: string

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(inputs.platforms) }}
        configuration: ${{ fromJson(inputs.configurations) }}

    runs-on: ${{ matrix.platform }}

    steps:    
    - name: Install apt dependencies
      if: runner.os == 'Linux' && inputs.apt_dependencies
      run: sudo apt-get update && sudo apt-get --fix-missing --reinstall install -y ${{ inputs.apt_dependencies }}

    - name: Install pip dependencies
      if: inputs.pip_dependencies
      run: pip3 install ${{ inputs.pip_dependencies }}

    - name: Install latest g++ for C++20
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install gcc-10 g++-10
        echo "CC=gcc-10" >> $GITHUB_ENV
        echo "CXX=g++-10" >> $GITHUB_ENV

    - name: Clone repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Get vcpkg
      if: ${{ inputs.vcpkg_commit }}
      uses: actions/checkout@v3
      with:
        repository: microsoft/vcpkg
        path: vcpkg

    - name: Run vcpkg
      if: ${{ inputs.vcpkg_commit }}
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgDirectory: vcpkg
        vcpkgGitCommitId: ${{ inputs.vcpkg_commit }}
        vcpkgJsonGlob: ${{ github.workspace }}/vcpkg.json

    - name: Run CMake
      uses: lukka/run-cmake@v10
      with:
        configurePresetAdditionalArgs: "['-DCMAKE_BUILD_TYPE=${{ matrix.configuration }} ${{ inputs.cmake_options }}']"

    - name: Package
      if: ${{ inputs.package_platforms && inputs.package_configurations && (inputs.package_platforms == 'all' || contains(fromJson(inputs.package_platforms), matrix.platform)) && (inputs.package_configurations == 'all' || contains(fromJson(inputs.package_configurations), matrix.configuration)) }}
      working-directory: ${{ github.workspace }}/build
      run: cpack
